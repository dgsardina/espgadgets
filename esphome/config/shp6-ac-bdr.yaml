# See https://www.esphome-devices.com/devices/BlitzWolf-BW-SHP6
substitutions:
  device_name: "plug-ac-bdr"
  # Higher value gives lower watt readout
  current_res: '0.00244'
  # Lower value gives lower voltage readout
  voltage_div: '753'
  # BW-SHP6, outlet with powermonitoring.
  max_power: "3450"
  # 2021 model uses GPIO4 for CF1 older GPIO14
  #cf1_pin: GPIO14
  cf1_pin: GPIO04

  # BW-SHP6, outlet with powermonitoring.
  # One button for the relay, and one red led for the relay, as well as a blue status led
  # Static IP is configured, and fast_connect is enabled, as the SSID is hidden
  # Webserver is active and pw protected, and the OTA is password protected

esphome:
  name: '${device_name}'
  platform: ESP8266
  board: esp8285
  on_boot:
    then:
      - switch.turn_off: relay
      - output.turn_off: led

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} Hotspot"
    password: !secret ap_password

logger:
  baud_rate: 0

api:

ota:
#  password: !secret ota_password

time:
  - platform: homeassistant
    id: homeassistant_time

# Button configuration
binary_sensor:
  - platform: gpio
    name: "${device_name} button"
    id: button
    pin:
      number: GPIO13
      inverted: true
    on_press:
      then:
        - switch.toggle: relay

# Setup of LED's used in displaying Switch status
output:
  - platform: gpio
    pin: GPIO0
    inverted: true
    id: led

# Config for switch
switch:
  - platform: gpio
    pin: GPIO15
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay
    name: '${device_name} Relay'
    on_turn_on:
      - output.turn_on: led
    on_turn_off:
      - output.turn_off: led

# Status LED for connection
status_led:
  pin:
    number: GPIO2
    inverted: true

# Sensors for Voltage (V), Current (A), Power (kW), Daily energy usage (kWh)
sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO5
    cf1_pin: ${cf1_pin}
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: '${device_name} Current'
      unit_of_measurement: 'A'
      accuracy_decimals: 3
      icon: mdi:flash-outline
    energy:
      name: "${device_name} Energy"
      unit_of_measurement: "Wh"
      icon: mdi:flash-outline
    voltage:
      name: '${device_name} Voltage'
      unit_of_measurement: 'V'
      icon: mdi:flash-outline
    power:
      name: '${device_name} Power'
      unit_of_measurement: 'W'
      accuracy_decimals: 2
      id: power
      icon: mdi:flash-outline
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay
            - output.turn_off: led
    change_mode_every: 4
    update_interval: 10s

  - platform: wifi_signal
    name: '${device_name} WiFi Signal'
    update_interval: 60s
    accuracy_decimals: 0

  - platform: uptime
    name: '${device_name} Uptime'
    unit_of_measurement: days
    update_interval: 300s
    accuracy_decimals: 1
    filters:
      - multiply: 0.000011574

text_sensor:
  - platform: version
    name: "${device_name} version"
  - platform: wifi_info
    ip_address:
      name: "${device_name} ip"
      icon: mdi:ip-network
    ssid:
      name: "${device_name} ssid"
