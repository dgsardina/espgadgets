substitutions:
  device_name: "epaper"

esphome:
  name: "${device_name}"
  platform: ESP32
  board: esp32dev
  #board: lolin32
  includes:
    - common/icon_map.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #manual_ip:
  #  static_ip: 192.168.1.62
  #  gateway: 192.168.1.254
  #  subnet: 255.255.255.0
  
  # Only use the following if only one AP with this SSID
  # Or when connecting to hidden ssid
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #ap:
  #  ssid: "Epaper Display1 Fallback Hotspot"
  #  password: "changeMe01!"

#captive_portal:

logger:

api:

ota:

time:
  - platform: homeassistant
    id: esptime
    timezone: Europe/Athens

binary_sensor:
  - platform: gpio
    name: "${device_name}_sw1"
    id: epaper_sw1 
    pin: 
      number: GPIO39
      mode: INPUT_PULLUP
      inverted: True
    filters:
        - delayed_on: 5ms
    on_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - if:
            condition:
              - light.is_off:
                  id: epaper_led
            then:
              - light.turn_on:
                  id: epaper_led
                  brightness: 80%
            else:
              - light.turn_off: epaper_led
              
sensor:
  - platform: uptime
    name: "${device_name} Uptime Sec"
    id: uptime_sec
    internal: true

  - platform: wifi_signal
    id: wifi_strength
    name: "${device_name} WiFi Signal"
    update_interval: 360s

  - platform: adc
    pin: GPIO35
    id: "VCC"
    internal: true
    # Max Vcc: 1.1 0db, 1.5 2.5db, 2.2V 6db, 3.9V 11db
    attenuation: 11db
    update_interval: 60s
    # Voltage divider on VCC to GPIO35 R1=R2=100k 1:2
    filters:
      - multiply: 1.796
    accuracy_decimals: 5
    unit_of_measurement: V

  - platform: template
    name: "${device_name} Battery"
    id: "battery"
    unit_of_measurement: "%"
    update_interval: 60s
    # vmin 3.5 vmax 4.2
    lambda: |-
      float battery_perc = 100.00 * (id(VCC).state - 3.5) / (4.20-3.5);
      return (battery_perc > 100.0) ? 100.0 : battery_perc ;

text_sensor:
  - platform: version
    name: "${device_name} Version"

  - platform: wifi_info
    ip_address:
      name: "${device_name} IPv4"
      icon: "mdi:server-network"
    ssid:
      name: "${device_name} Connected SSID"
      icon: "mdi:wifi"

  - platform: template
    name: "${device_name} Uptime"
    icon: "mdi:timer"
    update_interval: 360s
    lambda: |-
      int seconds = id(uptime_sec).state;
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600); 
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      return { (String(days) +"d " + String(hours) +"h " + String(minutes) +"m").c_str() };

  - platform: homeassistant
    id: icon_ow
    entity_id:  weather.openweathermap

output:
  - platform: ledc
    pin: GPIO19
    id: gpio_19

light:
  - platform: monochromatic
    output: gpio_19
    name: "epaper_led"
    id: epaper_led    
# see https://community.home-assistant.io/t/display-materialdesign-icons-on-esphome-attached-to-screen/199790/16
# see https://cdn.materialdesignicons.com/4.7.95/
font:
  - file: "fonts/Roboto-Regular.ttf"
    id: font_clock
    size: 48
  - file: "fonts/Roboto-Regular.ttf"
    id: font_big
    size: 30
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_icon_battery
    size: 30
    glyphs:
      - "\U000F007A" # battery-10
      - "\U000F007B" # battery-20
      - "\U000F007C" # battery-30
      - "\U000F007D" # battery-40
      - "\U000F007E" # battery-50
      - "\U000F007F" # battery-60
      - "\U000F0080" # battery-70
      - "\U000F0081" # battery-80
      - "\U000F0082" # battery-90
      - "\U000F0079" # battery
      - "\U000F0083" # battery-alert
      - "\U000F10CC" # battery-alert-variant
      - "\U000F10CD" # battery-alert-variant-outline
      - "\U000F010C" # mdi-car-battery
      - "\U000F092D" # wifi-off
      - "\U000F092E" # wifi-strength-0
      - "\U000F091F" # wifi-strength-1
      - "\U000F0922" # wifi-strength-2
      - "\U000F0925" # wifi-strength-3
      - "\U000F0928" # wifi-strength-4
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_icon_big
    size: 80
    glyphs:
      - "\U000F0590" # weather-cloudy
      - "\U000F0F2F" # weather-cloudy-alert
      - "\U000F0E6E" # weather-cloudy-arrow-right
      - "\U000F0591" # weather-fog
      - "\U000F0592" # weather-hail
      - "\U000F0F30" # weather-hazy
      - "\U000F0898" # weather-hurricane
      - "\U000F0593" # weather-lightning
      - "\U000F067E" # weather-lightning-rainy
      - "\U000F0594" # weather-night
      - "\U000F0F31" # weather-night-partly-cloudy
      - "\U000F0595" # weather-partly-cloudy
      - "\U000F0F32" # weather-partly-lightning
      - "\U000F0F33" # weather-partly-rainy
      - "\U000F0F34" # weather-partly-snowy
      - "\U000F0F35" # weather-partly-snowy-rainy
      - "\U000F0596" # weather-pouring
      - "\U000F0597" # weather-rainy
      - "\U000F0598" # weather-snowy
      - "\U000F0F36" # weather-snowy-heavy
      - "\U000F067F" # weather-snowy-rainy
      - "\U000F0599" # weather-sunny
      - "\U000F0F37" # weather-sunny-alert
      - "\U000F14E4" # weather-sunny-off
      - "\U000F059A" # weather-sunset
      - "\U000F059B" # weather-sunset-down
      - "\U000F059C" # weather-sunset-up
      - "\U000F0F38" # weather-tornado
      - "\U000F059D" # weather-windy
      - "\U000F059E" # weather-windy-variant
spi:
  clk_pin:  GPIO18
  mosi_pin: GPIO23

display:
  - platform: waveshare_epaper
    #- platform: gxepd2_epaper
    #model: 213_b73
    dc_pin: GPIO17
    cs_pin: GPIO5
    busy_pin: GPIO4
    reset_pin: GPIO16
    rotation: 0
    model: 2.13in-ttgo-b73
    full_update_every: 1
    update_interval: 30s
    id: my_display
    #info pixel dimensions: 250x122px
    #  #  line( x_1, y_1, x_2, y_2)
    #  HORIZ (90) 0 <= x <= 249, 6 <= y <= 127
    lambda: |-
       #define H_LEFT_MARGIN 4
       #define H_RIGHT_MARGIN 119
       #define H_CENTER 61 
       #define V_WEATHER 0
       #define V_CLOCK 80
       #define V_WIFI 152
       #define V_VOLTAGE 186
       #define V_BATTERY  220

       // Weather icon
       it.printf( H_CENTER ,  V_WEATHER, id(font_icon_big), TextAlign::TOP_CENTER, 
          weather_icon_map[id(icon_ow).state.c_str()].c_str());
          
       // Clock 
       it.strftime(H_CENTER, V_CLOCK, id(font_clock), TextAlign::TOP_CENTER, 
          "%H:%M", id(esptime).now());
          
       // Wifi   
       int wifi_bars = -1;
       float wifi_rssi = id(wifi_strength).state; 
       if (wifi_rssi > -50) {
          wifi_bars = 4;
       } else if (wifi_rssi > -60) {
          wifi_bars = 3;
       } else if (wifi_rssi > -70) {
          wifi_bars = 2;
       } else if (wifi_rssi > -80) {
          wifi_bars = 1;
       } else if (wifi_rssi > -90) {
          wifi_bars = 0;
       }

       it.printf( H_LEFT_MARGIN, V_WIFI, id(font_icon_battery), TextAlign::TOP_LEFT, 
          wifi_icon_map[wifi_bars].c_str());
       it.printf( H_RIGHT_MARGIN, V_WIFI, id(font_big), TextAlign::TOP_RIGHT, 
          "%3.0fdB", wifi_rssi);
       
       // Voltage 
       it.printf( H_LEFT_MARGIN, V_VOLTAGE +2, id(font_icon_battery), TextAlign::TOP_LEFT, 
          "\U000F010C");
       it.printf(H_RIGHT_MARGIN, V_VOLTAGE , id(font_big), TextAlign::TOP_RIGHT, 
          "%.2fV", id(VCC).state);

       // Battery %
       float battery_perc = 100.00 * (id(VCC).state - 3.5) / (4.20-3.5);
       int battery_range = battery_perc / 10 ;
       battery_range = (battery_range > 10) ? 10 : battery_range;
       battery_range = (battery_range < 0)  ?  0 : battery_range;

       it.printf( H_LEFT_MARGIN, V_BATTERY, id(font_icon_battery), TextAlign::TOP_LEFT, 
          battery_icon_map[battery_range].c_str()
          );
       it.printf(H_RIGHT_MARGIN, V_BATTERY, id(font_big), TextAlign::TOP_RIGHT, 
          "%3.0f%%", battery_perc);
       //it.line(  0,    0,   0, 249);
       //it.line( 121,   0, 121, 249);
       //it.line(   0,   0, 121,   0);
       //it.line(   0, 249, 121, 249);    

#deep_sleep:
#  run_duration: 8s
#  sleep_duration: 60s
#  wakeup_pin:
#    number: GPIO39
#    inverted: True
#  wakeup_pin_mode: IGNORE
#  id: deep_sleep_1
